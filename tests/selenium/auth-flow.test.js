// Generated by Selenium IDE (format adapted)
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('Auth and Form Flow', function() {
  this.timeout(30000)
  let driver
  let vars
  
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  
  afterEach(async function() {
    await driver.quit();
  })
  
  it('should complete login, form submission, and logout', async function() {
    // Navigate to login page
    await driver.get('http://localhost:8080/login')
    
    // Login
    await driver.findElement(By.id('username')).click()
    await driver.findElement(By.id('username')).sendKeys('admin')
    await driver.findElement(By.id('password')).click()
    await driver.findElement(By.id('password')).sendKeys('SuperSecretPassword!')
    await driver.findElement(By.css('button[type="submit"]')).click()
    
    // Wait for dashboard and verify
    await driver.wait(until.urlContains('/dashboard'), 10000)
    const welcomeText = await driver.findElement(By.css('.welcome-card')).getText()
    assert(welcomeText.includes('admin'), 'Should show username in welcome message')
    
    // Navigate to form (using CSS selector since link text includes emoji)
    await driver.findElement(By.css('a[href="/form"]')).click()
    await driver.wait(until.urlContains('/form'), 10000)
    
    // Fill form
    await driver.findElement(By.id('firstName')).click()
    await driver.findElement(By.id('firstName')).sendKeys('Ada')
    
    await driver.findElement(By.id('lastName')).click()
    await driver.findElement(By.id('lastName')).sendKeys('Lovelace')
    
    await driver.findElement(By.id('jobTitle')).click()
    await driver.findElement(By.id('jobTitle')).sendKeys('Mathematician')
    
    // Select radio buttons
    const educationRadio = await driver.findElement(By.xpath("//input[@value='Grad School']"))
    await educationRadio.click()
    
    const sexRadio = await driver.findElement(By.xpath("//input[@value='Female']"))
    await sexRadio.click()
    
    // Select dropdown
    await driver.findElement(By.id('experience')).click()
    await driver.findElement(By.xpath("//option[@value='5-9']")).click()
    
    // Set date
    await driver.findElement(By.id('date')).click()
    await driver.findElement(By.id('date')).sendKeys('10/29/2025')
    
    // Submit form
    await driver.findElement(By.css('button[type="submit"]')).click()
    
    // Verify submission
    await driver.wait(until.elementLocated(By.css('.submission-result')), 10000)
    const resultText = await driver.findElement(By.css('.submission-result')).getText()
    assert(resultText.includes('Form Submitted Successfully!'), 'Form should be submitted')
    assert(resultText.includes('Ada'), 'Result should contain first name')
    assert(resultText.includes('Lovelace'), 'Result should contain last name')
    
    // Navigate back to dashboard to logout
    await driver.get('http://localhost:8080/dashboard')
    await driver.wait(until.urlContains('/dashboard'), 10000)
    
    // Logout
    await driver.findElement(By.css('button.action-btn.secondary')).click()
    await driver.wait(until.urlContains('/login'), 10000)
    
    // Verify back at login
    const loginText = await driver.findElement(By.css('.login-card')).getText()
    assert(loginText.includes('Login Page'), 'Should be back at login page')
  })
})
